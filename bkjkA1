import java.util.Scanner;

enum Numwords {
    ZERO("Zero"), ONE("One"), TWO("Two"), THREE("Three"), FOUR("Four"),
    FIVE("Five"), SIX("Six"), SEVEN("Seven"), EIGHT("Eight"), NINE("Nine"),
    TEN("Ten"), ELEVEN("Eleven"), TWELVE("Twelve"), THIRTEEN("Thirteen"),
    FOURTEEN("Fourteen"), FIFTEEN("Fifteen"), SIXTEEN("Sixteen"),
    SEVENTEEN("Seventeen"), EIGHTEEN("Eighteen"), NINETEEN("Nineteen"),
    TWENTY("Twenty"), THIRTY("Thirty"), FORTY("Forty"), FIFTY("Fifty"),
    SIXTY("Sixty"), SEVENTY("Seventy"), EIGHTY("Eighty"), NINETY("Ninety");

    private final String word;

    Numwords(String word) {
        this.word = word;
    }

    public String getWord() {
        return word;
    }
}

public class A1 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a number: ");
        int number = sc.nextInt();
        sc.close();
        if (number < 0 || number > 99999) {
            System.out.println("Number out of range");
        } else {
            String result = convertToWords(number);
            System.out.println("Number in words: " + result);
        }
    }

    private static String convertToWords(int number) {
        if (number == 0) {
            return Numwords.ZERO.getWord();
        }
        StringBuilder result = new StringBuilder();
        if (number >= 1000) {
            result.append(getWordsForThousands(number / 1000));
            number %= 1000;
        }
        if (number >= 100) {
            result.append(getWordsForHundreds(number / 100));
            number %= 100;
        }
        if (number >= 20) {
            result.append(getWordsForTens(number / 10 * 10));
            number %= 10;
        }
        if (number > 0) {
            result.append(getWordsForUnits(number));
        }
        return result.toString().trim();
    }

    private static String getWordsForThousands(int number) {
        return convertToWords(number) + " Thousand ";
    }

    private static String getWordsForHundreds(int number) {
        return Numwords.values()[number].getWord() + " Hundred ";
    }

    private static String getWordsForTens(int number) {
        return Numwords.values()[number / 10 + 18].getWord() + " ";
    }

    private static String getWordsForUnits(int number) {
        return Numwords.values()[number].getWord() + " ";
    }
}
