package studentdatabase;

import java.sql.*;
import java.util.Scanner;

public class StudentDatabase {

    private static final String DB_URL = "jdbc:mysql://localhost:3306/sddata?characterEncoding=latin1&useConfigs=maxPerformance";
    private static final String USER = "root";
    private static final String PASSWORD = "";

    public static void main(String[] args) {
        try (Scanner sc = new Scanner(System.in);
             Connection connection = DriverManager.getConnection(DB_URL, USER, PASSWORD)) {

            int choice;
            do {
                System.out.println("\nMENU:");
                System.out.println("1. Add New Record");
                System.out.println("2. Update Address");
                System.out.println("3. Delete Record");
                System.out.println("4. Search for a Student");
                System.out.println("5. Exit");
                System.out.print("Enter your choice: ");
                choice = sc.nextInt();
                sc.nextLine(); // Consume newline after integer input

                switch (choice) {
                    case 1:
                        addRecord(connection, sc);
                        break;
                    case 2:
                        updateStudentAddress(connection, sc);
                        break;
                    case 3:
                        deleteRecord(connection, sc);
                        break;
                    case 4:
                        searchStudent(connection, sc);
                        break;
                    case 5:
                        System.out.println("Exiting Program");
                        break;
                    default:
                        System.out.println("Invalid choice. Please try again.");
                }
            } while (choice != 5);

        } catch (SQLException e) {
            System.err.println("Database error: " + e.getMessage());
        }
    }

    public static void addRecord(Connection connection, Scanner sc) {
        System.out.print("Enter Student RegNo: ");
        int regNo = sc.nextInt();
        sc.nextLine(); // Consume newline after integer input
        System.out.print("Enter Student Name: ");
        String name = sc.nextLine();
        System.out.print("Enter Student DoB (YYYY-MM-DD): ");
        String dob = sc.nextLine();
        System.out.print("Enter Student Address: ");
        String address = sc.nextLine();
        System.out.print("Enter Student Class: ");
        String studentClass = sc.nextLine();
        System.out.print("Enter Student Course: ");
        String course = sc.nextLine();

        String query = "INSERT INTO student (regno, name, dob, address, class, course) VALUES (?, ?, ?, ?, ?, ?)";
        try (PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setInt(1, regNo);
            statement.setString(2, name);
            statement.setString(3, dob);
            statement.setString(4, address);
            statement.setString(5, studentClass);
            statement.setString(6, course);
            statement.executeUpdate();
            System.out.println("Record Added Successfully");
        } catch (SQLException e) {
            System.err.println("Error adding record: " + e.getMessage());
        }
    }

    public static void updateStudentAddress(Connection connection, Scanner sc) {
        System.out.print("Enter Student RegNo to update address: ");
        int regNo = sc.nextInt();
        sc.nextLine(); // Consume newline after integer input
        System.out.print("Enter new address: ");
        String address = sc.nextLine();

        String query = "UPDATE student SET address = ? WHERE regno = ?";
        try (PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setString(1, address);
            statement.setInt(2, regNo);
            int rowsUpdated = statement.executeUpdate();
            if (rowsUpdated > 0) {
                System.out.println("Student address updated successfully");
            } else {
                System.out.println("No student found with RegNo: " + regNo);
            }
        } catch (SQLException e) {
            System.err.println("Error updating address: " + e.getMessage());
        }
    }

    public static void deleteRecord(Connection connection, Scanner sc) {
        System.out.print("Enter Student RegNo to delete: ");
        int regNo = sc.nextInt();
        sc.nextLine(); // Consume newline after integer input

        String query = "DELETE FROM student WHERE regno = ?";
        try (PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setInt(1, regNo);
            int rowsDeleted = statement.executeUpdate();
            if (rowsDeleted > 0) {
                System.out.println("Student record deleted successfully");
            } else {
                System.out.println("No student found with RegNo: " + regNo);
            }
        } catch (SQLException e) {
            System.err.println("Error deleting record: " + e.getMessage());
        }
    }

    public static void searchStudent(Connection connection, Scanner sc) {
        System.out.print("Enter Student RegNo to search: ");
        int regNo = sc.nextInt();
        sc.nextLine(); // Consume newline after integer input

        String query = "SELECT * FROM student WHERE regno = ?";
        try (PreparedStatement statement = connection.prepareStatement(query)) {
            statement.setInt(1, regNo);
            ResultSet resultSet = statement.executeQuery();
            if (resultSet.next()) {
                String name = resultSet.getString("name");
                String dob = resultSet.getString("dob");
                String address = resultSet.getString("address");
                String studentClass = resultSet.getString("class");
                String course = resultSet.getString("course");
                System.out.printf("RegNo: %d, Name: %s, DoB: %s, Address: %s, Class: %s, Course: %s%n",
                        regNo, name, dob, address, studentClass, course);
            } else {
                System.out.println("No student found with RegNo: " + regNo);
            }
        } catch (SQLException e) {
            System.err.println("Error searching for student: " + e.getMessage());
        }
    }
}
